name: Go Release

on:
  release:
    types: [created]

jobs:
  update-report-card:
    name: Update report card
    runs-on: ubuntu-latest
    steps:
      - name: Request to goreportcard.com
        run: curl 'https://goreportcard.com/checks' --data-raw 'repo=github.com%2Fguionardo%2Fgs-dev'

  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows]
        goarch: [amd64]

    steps:
    - uses: actions/checkout@v2
    - uses: wangyoucao577/go-release-action@v1.46
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        # goversion: "https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz"
        # project_path: "./cmd/test-binary"
        # binary_name: "test-binary"
        extra_files: LICENSE README.md

  # release-linux-arm:
  #   name: release linux/arm
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: wangyoucao577/go-release-action@v1.22
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         goos: linux
  #         goarch: arm
  #         goarm: 5
  #         extra_files: README.md

  # release-linux-amd64:
  #   name: release linux/amd64
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: wangyoucao577/go-release-action@v1.22
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         goos: linux
  #         goarch: arm
  #         goarm: 5
  #         extra_files: README.md
